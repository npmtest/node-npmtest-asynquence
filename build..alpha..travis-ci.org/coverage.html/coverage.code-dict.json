{"/home/travis/build/npmtest/node-npmtest-asynquence/test.js":"/* istanbul instrument in package npmtest_asynquence */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-asynquence/lib.npmtest_asynquence.js":"/* istanbul instrument in package npmtest_asynquence */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_asynquence = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_asynquence = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-asynquence/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-asynquence && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_asynquence */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_asynquence\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_asynquence.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_asynquence.rollup.js'] =\n            local.assetsDict['/assets.npmtest_asynquence.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_asynquence.__dirname + '/lib.npmtest_asynquence.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-asynquence/node_modules/asynquence/asq.src.js":"/*! asynquence\n    v0.10.0 (c) Kyle Simpson\n    MIT License: http://getify.mit-license.org\n*/\n\n(function UMD(name,context,definition){\n\tif (typeof define === \"function\" && define.amd) { define(definition); }\n\telse if (typeof module !== \"undefined\" && module.exports) { module.exports = definition(); }\n\telse { context[name] = definition(name,context); }\n})(\"ASQ\",this,function DEF(name,context){\n\t\"use strict\";\n\n\tvar cycle, scheduling_queue,\n\t\ttimer = (typeof setImmediate !== \"undefined\") ?\n\t\t\tfunction $$timer(fn) { return setImmediate(fn); } :\n\t\t\tsetTimeout\n\t;\n\n\t// Note: using a queue instead of array for efficiency\n\tfunction Queue() {\n\t\tvar first, last, item;\n\n\t\tfunction Item(fn) {\n\t\t\tthis.fn = fn;\n\t\t\tthis.next = void 0;\n\t\t}\n\n\t\treturn {\n\t\t\tadd: function $$add(fn) {\n\t\t\t\titem = new Item(fn);\n\t\t\t\tif (last) {\n\t\t\t\t\tlast.next = item;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfirst = item;\n\t\t\t\t}\n\t\t\t\tlast = item;\n\t\t\t\titem = void 0;\n\t\t\t},\n\t\t\tdrain: function $$drain() {\n\t\t\t\tvar f = first;\n\t\t\t\tfirst = last = cycle = null;\n\n\t\t\t\twhile (f) {\n\t\t\t\t\tf.fn();\n\t\t\t\t\tf = f.next;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tscheduling_queue = Queue();\n\n\tfunction schedule(fn) {\n\t\tscheduling_queue.add(fn);\n\t\tif (!cycle) {\n\t\t\tcycle = timer(scheduling_queue.drain);\n\t\t}\n\t}\n\n\tfunction tapSequence(def) {\n\t\t// temporary `trigger` which, if called before being replaced\n\t\t// above, creates replacement proxy sequence with the\n\t\t// success/error message(s) pre-injected\n\t\tfunction trigger() {\n\t\t\tdef.seq = createSequence.apply(ø,arguments).defer();\n\t\t}\n\n\t\t// fail trigger\n\t\ttrigger.fail = function $$trigger$fail() {\n\t\t\tvar args = ARRAY_SLICE.call(arguments);\n\t\t\tdef.seq = createSequence(function $$create$sequence(done){\n\t\t\t\tdone.fail.apply(ø,args);\n\t\t\t})\n\t\t\t.defer();\n\t\t};\n\n\t\t// listen for signals from the sequence\n\t\tdef.seq\n\t\t// note: cannot use `seq.pipe(trigger)` because we\n\t\t// need to be able to update the shared closure\n\t\t// to change `trigger`\n\t\t.val(function $$val(){\n\t\t\ttrigger.apply(ø,arguments);\n\t\t\treturn ASQmessages.apply(ø,arguments);\n\t\t})\n\t\t.or(function $$or(){\n\t\t\ttrigger.fail.apply(ø,arguments);\n\t\t});\n\n\t\t// make a sequence to act as a proxy to the original\n\t\t// sequence\n\t\tdef.seq = createSequence(function $$create$sequence(done){\n\t\t\t// replace the temporary trigger (created below)\n\t\t\t// with this proxy's trigger\n\t\t\ttrigger = done;\n\t\t})\n\t\t.defer();\n\t}\n\n\tfunction createSequence() {\n\n\t\tfunction scheduleSequenceTick() {\n\t\t\tif (seq_aborted) {\n\t\t\t\tsequenceTick();\n\t\t\t}\n\t\t\telse if (!seq_tick) {\n\t\t\t\tseq_tick = schedule(sequenceTick);\n\t\t\t}\n\t\t}\n\n\t\tfunction throwSequenceErrors() {\n\t\t\tthrow (sequence_errors.length === 1 ? sequence_errors[0] : sequence_errors);\n\t\t}\n\n\t\tfunction sequenceTick() {\n\t\t\tvar fn, args;\n\n\t\t\tseq_tick = null;\n\t\t\t// remove the temporary `unpause()` hook, if any\n\t\t\tdelete sequence_api.unpause;\n\n\t\t\tif (seq_aborted) {\n\t\t\t\tclearTimeout(seq_tick);\n\t\t\t\tseq_tick = null;\n\t\t\t\tthen_queue.length = or_queue.length = sequence_messages.length = sequence_errors.length = 0;\n\t\t\t}\n\t\t\telse if (seq_error) {\n\t\t\t\tif (or_queue.length === 0 && !error_reported) {\n\t\t\t\t\terror_reported = true;\n\t\t\t\t\tthrowSequenceErrors();\n\t\t\t\t}\n\n\t\t\t\twhile (or_queue.length) {\n\t\t\t\t\terror_reported = true;\n\t\t\t\t\tfn = or_queue.shift();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfn.apply(ø,sequence_errors);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (err) {\n\t\t\t\t\t\tif (isMessageWrapper(err)) {\n\t\t\t\t\t\t\tsequence_errors = sequence_errors.concat(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsequence_errors.push(err);\n\t\t\t\t\t\t\tif (err.stack) { sequence_errors.push(err.stack); }\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (or_queue.length === 0) {\n\t\t\t\t\t\t\tthrowSequenceErrors();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (then_ready && then_queue.length > 0) {\n\t\t\t\tthen_ready = false;\n\t\t\t\tfn = then_queue.shift();\n\t\t\t\targs = sequence_messages.slice();\n\t\t\t\tsequence_messages.length = 0;\n\t\t\t\targs.unshift(createStepCompletion());\n\n\t\t\t\ttry {\n\t\t\t\t\tfn.apply(ø,args);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\tif (isMessageWrapper(err)) {\n\t\t\t\t\t\tsequence_errors = sequence_errors.concat(err);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsequence_errors.push(err);\n\t\t\t\t\t}\n\t\t\t\t\tseq_error = true;\n\t\t\t\t\tscheduleSequenceTick();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction createStepCompletion() {\n\n\t\t\tfunction done() {\n\t\t\t\t// ignore this call?\n\t\t\t\tif (seq_error || seq_aborted || then_ready || step_completed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tstep_completed = true;\n\t\t\t\tthen_ready = true;\n\t\t\t\tsequence_messages.push.apply(sequence_messages,arguments);\n\t\t\t\tsequence_errors.length = 0;\n\n\t\t\t\tscheduleSequenceTick();\n\t\t\t}\n\n\t\t\tdone.fail = function $$step$fail(){\n\t\t\t\t// ignore this call?\n\t\t\t\tif (seq_error || seq_aborted || then_ready || step_completed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tseq_error = true;\n\t\t\t\tsequence_messages.length = 0;\n\t\t\t\tsequence_errors.push.apply(sequence_errors,arguments);\n\n\t\t\t\tscheduleSequenceTick();\n\t\t\t};\n\n\t\t\tdone.abort = function $$step$abort(){\n\t\t\t\tif (seq_error || seq_aborted) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthen_ready = false;\n\t\t\t\tseq_aborted = true;\n\t\t\t\tsequence_messages.length = sequence_errors.length = 0;\n\n\t\t\t\tscheduleSequenceTick();\n\t\t\t};\n\n\t\t\t// handles \"error-first\" (aka \"node-style\") callbacks\n\t\t\tdone.errfcb = function $$step$errfcb(err){\n\t\t\t\tif (err) {\n\t\t\t\t\tdone.fail(err);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdone.apply(ø,ARRAY_SLICE.call(arguments,1));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar step_completed = false;\n\n\t\t\treturn done;\n\t\t}\n\n\t\tfunction createGate(stepCompletion,segments,seqMessages) {\n\n\t\t\tfunction resetGate() {\n\t\t\t\tclearTimeout(gate_tick);\n\t\t\t\tgate_tick = segment_completion =\n\t\t\t\t\tsegment_messages = segment_error_message = null;\n\t\t\t}\n\n\t\t\tfunction scheduleGateTick() {\n\t\t\t\tif (gate_aborted) {\n\t\t\t\t\treturn gateTick();\n\t\t\t\t}\n\n\t\t\t\tif (!gate_tick) {\n\t\t\t\t\tgate_tick = schedule(gateTick);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction gateTick() {\n\t\t\t\tif (seq_error || seq_aborted || gate_completed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar msgs = [];\n\n\t\t\t\tgate_tick = null;\n\n\t\t\t\tif (gate_error) {\n\t\t\t\t\tstepCompletion.fail.apply(ø,segment_error_message);\n\n\t\t\t\t\tresetGate();\n\t\t\t\t}\n\t\t\t\telse if (gate_aborted) {\n\t\t\t\t\tstepCompletion.abort();\n\n\t\t\t\t\tresetGate();\n\t\t\t\t}\n\t\t\t\telse if (checkGate()) {\n\t\t\t\t\tgate_completed = true;\n\n\t\t\t\t\t// collect all the messages from the gate segments\n\t\t\t\t\tsegment_completion\n\t\t\t\t\t.forEach(function $$each(sc,i){\n\t\t\t\t\t\tmsgs.push(segment_messages[\"s\" + i]);\n\t\t\t\t\t});\n\n\t\t\t\t\tstepCompletion.apply(ø,msgs);\n\n\t\t\t\t\tresetGate();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction checkGate() {\n\t\t\t\tif (segment_completion.length === 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar fulfilled = true;\n\n\t\t\t\tsegment_completion.some(function $$some(segcom){\n\t\t\t\t\tif (segcom === null) {\n\t\t\t\t\t\tfulfilled = false;\n\t\t\t\t\t\treturn true; // break\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn fulfilled;\n\t\t\t}\n\n\t\t\tfunction createSegmentCompletion() {\n\n\t\t\t\tfunction done() {\n\t\t\t\t\t// ignore this call?\n\t\t\t\t\tif (seq_error || seq_aborted || gate_error ||\n\t\t\t\t\t\tgate_aborted || gate_completed ||\n\t\t\t\t\t\tsegment_completion[segment_completion_idx]\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// put gate-segment messages into `messages`-branded\n\t\t\t\t\t// container\n\t\t\t\t\tvar args = ASQmessages.apply(ø,arguments);\n\n\t\t\t\t\tsegment_messages[\"s\" + segment_completion_idx] =\n\t\t\t\t\t\targs.length > 1 ? args : args[0];\n\t\t\t\t\tsegment_completion[segment_completion_idx] = true;\n\n\t\t\t\t\tscheduleGateTick();\n\t\t\t\t}\n\n\t\t\t\tvar segment_completion_idx = segment_completion.length;\n\n\t\t\t\tdone.fail = function $$segment$fail(){\n\t\t\t\t\t// ignore this call?\n\t\t\t\t\tif (seq_error || seq_aborted || gate_error ||\n\t\t\t\t\t\tgate_aborted || gate_completed ||\n\t\t\t\t\t\tsegment_completion[segment_completion_idx]\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tgate_error = true;\n\t\t\t\t\tsegment_error_message = ARRAY_SLICE.call(arguments);\n\n\t\t\t\t\tscheduleGateTick();\n\t\t\t\t};\n\n\t\t\t\tdone.abort = function $$segment$abort(){\n\t\t\t\t\tif (seq_error || seq_aborted || gate_error ||\n\t\t\t\t\t\tgate_aborted || gate_completed\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tgate_aborted = true;\n\n\t\t\t\t\t// abort() is an immediate/synchronous action\n\t\t\t\t\tgateTick();\n\t\t\t\t};\n\n\t\t\t\t// handles \"error-first\" (aka \"node-style\") callbacks\n\t\t\t\tdone.errfcb = function $$segment$errfcb(err){\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tdone.fail(err);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdone.apply(ø,ARRAY_SLICE.call(arguments,1));\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// placeholder for when a gate-segment completes\n\t\t\t\tsegment_completion[segment_completion_idx] = null;\n\n\t\t\t\treturn done;\n\t\t\t}\n\n\t\t\tvar gate_error = false,\n\t\t\t\tgate_aborted = false,\n\t\t\t\tgate_completed = false,\n\n\t\t\t\targs,\n\t\t\t\terr_msg,\n\n\t\t\t\tsegment_completion = [],\n\t\t\t\tsegment_messages = {},\n\t\t\t\tsegment_error_message,\n\n\t\t\t\tgate_tick\n\t\t\t;\n\n\t\t\tsegments.some(function $$some(seg){\n\t\t\t\tif (gate_error || gate_aborted) {\n\t\t\t\t\treturn true; // break\n\t\t\t\t}\n\n\t\t\t\targs = seqMessages.slice();\n\t\t\t\targs.unshift(createSegmentCompletion());\n\t\t\t\ttry {\n\t\t\t\t\tseg.apply(ø,args);\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\terr_msg = err;\n\t\t\t\t\tgate_error = true;\n\t\t\t\t\treturn true; // break\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (err_msg) {\n\t\t\t\tif (isMessageWrapper(err_msg)) {\n\t\t\t\t\tstepCompletion.fail.apply(ø,err_msg);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstepCompletion.fail(err_msg);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction then() {\n\t\t\tif (seq_error || seq_aborted ||\targuments.length === 0) {\n\t\t\t\treturn sequence_api;\n\t\t\t}\n\n\t\t\twrapArgs(arguments,thenWrapper)\n\t\t\t.forEach(function $$each(v){\n\t\t\t\tif (isSequence(v)) {\n\t\t\t\t\tseq(v);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthen_queue.push(v);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tscheduleSequenceTick();\n\n\t\t\treturn sequence_api;\n\t\t}\n\n\t\tfunction or() {\n\t\t\tif (seq_aborted || arguments.length === 0) {\n\t\t\t\treturn sequence_api;\n\t\t\t}\n\n\t\t\tor_queue.push.apply(or_queue,arguments);\n\n\t\t\tscheduleSequenceTick();\n\n\t\t\treturn sequence_api;\n\t\t}\n\n\t\tfunction gate() {\n\t\t\tif (seq_error || seq_aborted || arguments.length === 0) {\n\t\t\t\treturn sequence_api;\n\t\t\t}\n\n\t\t\tvar fns = ARRAY_SLICE.call(arguments)\n\t\t\t// map any sequences to gate segments\n\t\t\t.map(function $$map(v){\n\t\t\t\tvar def;\n\n\t\t\t\t// is `v` a sequence or iterable-sequence?\n\t\t\t\tif (isSequence(v)) {\n\t\t\t\t\tdef = { seq: v };\n\t\t\t\t\ttapSequence(def);\n\t\t\t\t\treturn function $$segment(done) {\n\t\t\t\t\t\tdef.seq.pipe(done);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse return v;\n\t\t\t});\n\n\t\t\tthen(function $$then(done){\n\t\t\t\tvar args = ARRAY_SLICE.call(arguments,1);\n\t\t\t\tcreateGate(done,fns,args);\n\t\t\t});\n\n\t\t\treturn sequence_api;\n\t\t}\n\n\t\tfunction pipe() {\n\t\t\tif (seq_aborted || arguments.length === 0) {\n\t\t\t\treturn sequence_api;\n\t\t\t}\n\n\t\t\tARRAY_SLICE.call(arguments)\n\t\t\t.forEach(function $$each(trigger){\n\t\t\t\tthen(function $$then(done){\n\t\t\t\t\ttrigger.apply(ø,ARRAY_SLICE.call(arguments,1));\n\t\t\t\t\tdone();\n\t\t\t\t})\n\t\t\t\t.or(trigger.fail);\n\t\t\t});\n\n\t\t\treturn sequence_api;\n\t\t}\n\n\t\tfunction seq() {\n\t\t\tif (seq_error || seq_aborted || arguments.length === 0) {\n\t\t\t\treturn sequence_api;\n\t\t\t}\n\n\t\t\tARRAY_SLICE.call(arguments)\n\t\t\t.forEach(function $$each(v){\n\t\t\t\tvar def = { seq: v };\n\n\t\t\t\t// is `fn` a sequence or iterable-sequence?\n\t\t\t\tif (isSequence(v)) {\n\t\t\t\t\ttapSequence(def);\n\t\t\t\t}\n\n\t\t\t\tthen(function $$then(done){\n\t\t\t\t\tvar _v = def.seq;\n\t\t\t\t\t// check if this argument is not already a sequence?\n\t\t\t\t\t// if not, assume a function to invoke that will return\n\t\t\t\t\t// a sequence.\n\t\t\t\t\tif (!isSequence(_v)) {\n\t\t\t\t\t\t_v = def.seq.apply(ø,ARRAY_SLICE.call(arguments,1));\n\t\t\t\t\t}\n\t\t\t\t\t// pipe the provided sequence into our current sequence\n\t\t\t\t\t_v.pipe(done);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn sequence_api;\n\t\t}\n\n\t\tfunction val() {\n\t\t\tif (seq_error || seq_aborted || arguments.length === 0) {\n\t\t\t\treturn sequence_api;\n\t\t\t}\n\n\t\t\tARRAY_SLICE.call(\n\t\t\t\twrapArgs(arguments,valWrapper)\n\t\t\t)\n\t\t\t.forEach(function $$each(fn){\n\t\t\t\tthen(function $$then(done){\n\t\t\t\t\tvar msgs = fn.apply(ø,ARRAY_SLICE.call(arguments,1));\n\t\t\t\t\tif (!isMessageWrapper(msgs)) {\n\t\t\t\t\t\tmsgs = ASQmessages(msgs);\n\t\t\t\t\t}\n\t\t\t\t\tdone.apply(ø,msgs);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn sequence_api;\n\t\t}\n\n\t\tfunction promise() {\n\t\t\tfunction wrap(fn) {\n\t\t\t\treturn function $$fn(){\n\t\t\t\t\tfn.apply(ø,isMessageWrapper(arguments[0]) ? arguments[0] : arguments);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (seq_error || seq_aborted || arguments.length === 0) {\n\t\t\t\treturn sequence_api;\n\t\t\t}\n\n\t\t\tARRAY_SLICE.call(arguments)\n\t\t\t.forEach(function $$each(pr){\n\t\t\t\tthen(function $$then(done){\n\t\t\t\t\tvar _pr = pr;\n\t\t\t\t\t// check if this argument is a non-thenable function, and\n\t\t\t\t\t// if so, assume we shold invoke it to return a promise\n\t\t\t\t\t// NOTE: `then` duck-typing of promises is stupid.\n\t\t\t\t\tif (typeof pr === \"function\" && typeof pr.then !== \"function\") {\n\t\t\t\t\t\t_pr = pr.apply(ø,ARRAY_SLICE.call(arguments,1));\n\t\t\t\t\t}\n\t\t\t\t\t// now, hook up the promise to the sequence\n\t\t\t\t\t_pr.then(\n\t\t\t\t\t\twrap(done),\n\t\t\t\t\t\twrap(done.fail)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn sequence_api;\n\t\t}\n\n\t\tfunction fork() {\n\t\t\tvar trigger;\n\n\t\t\t// listen for success at this point in the sequence\n\t\t\tval(function $$val(){\n\t\t\t\tif (trigger) {\n\t\t\t\t\ttrigger.apply(ø,arguments);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttrigger = createSequence.apply(ø,arguments).defer();\n\t\t\t\t}\n\t\t\t\treturn ASQmessages.apply(ø,arguments);\n\t\t\t});\n\t\t\t// listen for error at this point in the sequence\n\t\t\tor(function $$or(){\n\t\t\t\tif (trigger) {\n\t\t\t\t\ttrigger.fail.apply(ø,arguments);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar args = ARRAY_SLICE.call(arguments);\n\t\t\t\t\ttrigger = createSequence().then(function $$then(done){\n\t\t\t\t\t\tdone.fail.apply(ø,args);\n\t\t\t\t\t})\n\t\t\t\t\t.defer();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// create the forked sequence which will receive\n\t\t\t// the success/error stream from the main sequence\n\t\t\treturn createSequence()\n\t\t\t.then(function $$then(done){\n\t\t\t\tif (!trigger) {\n\t\t\t\t\ttrigger = done;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttrigger.pipe(done);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.defer();\n\t\t}\n\n\t\tfunction abort() {\n\t\t\tif (seq_error) {\n\t\t\t\treturn sequence_api;\n\t\t\t}\n\n\t\t\tseq_aborted = true;\n\n\t\t\tsequenceTick();\n\n\t\t\treturn sequence_api;\n\t\t}\n\n\t\tfunction duplicate() {\n\t\t\tvar sq;\n\n\t\t\ttemplate = {\n\t\t\t\tthen_queue: then_queue.slice(),\n\t\t\t\tor_queue: or_queue.slice()\n\t\t\t};\n\t\t\tsq = createSequence();\n\t\t\ttemplate = null;\n\n\t\t\treturn sq;\n\t\t}\n\n\t\tfunction unpause() {\n\t\t\tsequence_messages.push.apply(sequence_messages,arguments);\n\t\t\tif (seq_tick === true) seq_tick = null;\n\t\t\tscheduleSequenceTick();\n\t\t}\n\n\t\t// opt-out of global error reporting for this sequence\n\t\tfunction defer() {\n\t\t\tor_queue.push(function ignored(){});\n\t\t\treturn sequence_api;\n\t\t}\n\n\t\tfunction internals(name,value) {\n\t\t\tvar set = (arguments.length > 1);\n\t\t\tswitch (name) {\n\t\t\t\tcase \"seq_error\":\n\t\t\t\t\tif (set) { seq_error = value; }\n\t\t\t\t\telse { return seq_error; }\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"seq_aborted\":\n\t\t\t\t\tif (set) { seq_aborted = value; }\n\t\t\t\t\telse { return seq_aborted; }\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"then_ready\":\n\t\t\t\t\tif (set) { then_ready = value; }\n\t\t\t\t\telse { return then_ready; }\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"then_queue\":\n\t\t\t\t\treturn then_queue;\n\t\t\t\tcase \"or_queue\":\n\t\t\t\t\treturn or_queue;\n\t\t\t\tcase \"sequence_messages\":\n\t\t\t\t\treturn sequence_messages;\n\t\t\t\tcase \"sequence_errors\":\n\t\t\t\t\treturn sequence_errors;\n\t\t\t}\n\t\t}\n\n\t\tfunction includeExtensions() {\n\t\t\tObject.keys(extensions)\n\t\t\t.forEach(function $$each(name){\n\t\t\t\tsequence_api[name] = sequence_api[name] ||\n\t\t\t\t\textensions[name](sequence_api,internals);\n\t\t\t});\n\t\t}\n\n\t\tvar seq_error = false,\n\t\t\terror_reported = false,\n\t\t\tseq_aborted = false,\n\t\t\tthen_ready = true,\n\n\t\t\tthen_queue = [],\n\t\t\tor_queue = [],\n\n\t\t\tsequence_messages = [],\n\t\t\tsequence_errors = [],\n\n\t\t\tseq_tick,\n\n\t\t\t// brand the sequence API so we can detect ASQ instances\n\t\t\tsequence_api = brandIt({\n\t\t\t\tthen: then,\n\t\t\t\tor: or,\n\t\t\t\t// alias of `or(..)` to `onerror(..)`\n\t\t\t\tonerror: or,\n\t\t\t\tgate: gate,\n\t\t\t\t// alias of `gate(..)` to `all(..)` for symmetry\n\t\t\t\t// with native ES6 promises\n\t\t\t\tall: gate,\n\t\t\t\tpipe: pipe,\n\t\t\t\tseq: seq,\n\t\t\t\tval: val,\n\t\t\t\tpromise: promise,\n\t\t\t\tfork: fork,\n\t\t\t\tabort: abort,\n\t\t\t\tduplicate: duplicate,\n\t\t\t\tdefer: defer\n\t\t\t})\n\t\t;\n\n\t\t// include any extensions\n\t\tincludeExtensions();\n\n\t\t// templating the sequence setup?\n\t\tif (template) {\n\t\t\tthen_queue = template.then_queue.slice();\n\t\t\tor_queue = template.or_queue.slice();\n\n\t\t\t// templating a sequence starts it out paused\n\t\t\t// add temporary `unpause()` API hook\n\t\t\tsequence_api.unpause = unpause;\n\t\t\tseq_tick = true;\n\t\t}\n\n\t\t// treat ASQ() constructor parameters as having been\n\t\t// passed to `then()`\n\t\tsequence_api.then.apply(ø,arguments);\n\n\t\treturn sequence_api;\n\t}\n\n\n\t// ***********************************************\n\t// Object branding utilities\n\t// ***********************************************\n\tfunction brandIt(obj) {\n\t\treturn Object.defineProperty(obj,brand,{\n\t\t\tenumerable: false,\n\t\t\tvalue: true\n\t\t});\n\t}\n\n\tfunction checkBranding(val) {\n\t\treturn !!(val != null && typeof val === \"object\" && val[brand]);\n\t}\n\n\n\t// ***********************************************\n\t// Value messages utilities\n\t// ***********************************************\n\t// wrapper helpers\n\tfunction valWrapper(numArgs) {\n\t\t// `numArgs` indicates how many pre-bound arguments\n\t\t// will be sent in.\n\t\treturn ASQmessages.apply(ø,\n\t\t\t// pass along only the pre-bound arguments\n\t\t\tARRAY_SLICE.call(arguments).slice(1,numArgs+1)\n\t\t);\n\t}\n\n\tfunction thenWrapper(numArgs) {\n\t\t// Because of bind() partial-application, will\n\t\t// receive pre-bound arguments before the `done()`,\n\t\t// rather than it being first as usual.\n\t\t// `numArgs` indicates how many pre-bound arguments\n\t\t// will be sent in.\n\t\targuments[numArgs+1] // the `done()`\n\t\t.apply(ø,\n\t\t\t// pass along only the pre-bound arguments\n\t\t\tARRAY_SLICE.call(arguments).slice(1,numArgs+1)\n\t\t);\n\t}\n\n\tfunction wrapArgs(args,wrapper) {\n\t\tvar i, j;\n\t\targs = ARRAY_SLICE.call(args);\n\t\tfor (i=0; i<args.length; i++) {\n\t\t\tif (isMessageWrapper(args[i])) {\n\t\t\t\targs[i] = wrapper.bind.apply(wrapper,\n\t\t\t\t\t// partial-application of arguments\n\t\t\t\t\t[/*this=*/null,/*numArgs=*/args[i].length]\n\t\t\t\t\t.concat(\n\t\t\t\t\t\t// pre-bound arguments\n\t\t\t\t\t\targs[i]\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (typeof args[i] !== \"function\" &&\n\t\t\t\t(\n\t\t\t\t\twrapper === valWrapper ||\n\t\t\t\t\t!isSequence(args[i])\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tfor (j=i+1; j<args.length; j++) {\n\t\t\t\t\tif (typeof args[j] === \"function\" ||\n\t\t\t\t\t\tcheckBranding(args[j])\n\t\t\t\t\t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\targs.splice(\n\t\t\t\t\t/*start=*/i,\n\t\t\t\t\t/*howMany=*/j-i,\n\t\t\t\t\t/*replace=*/wrapper.bind.apply(wrapper,\n\t\t\t\t\t\t// partial-application of arguments\n\t\t\t\t\t\t[/*this=*/null,/*numArgs=*/(j-i)]\n\t\t\t\t\t\t.concat(\n\t\t\t\t\t\t\t// pre-bound arguments\n\t\t\t\t\t\t\targs.slice(i,j)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn args;\n\t}\n\n\n\tvar extensions = {}, template,\n\t\told_public_api = (context || {})[name],\n\t\tARRAY_SLICE = [].slice,\n\t\tbrand = \"__ASQ__\", ø = Object.create(null),\n\t\tASQmessages, isSequence, isMessageWrapper\n\t;\n\n\t// ***********************************************\n\t// Setup the public API\n\t// ***********************************************\n\tcreateSequence.failed = function $$public$failed() {\n\t\tvar args = ASQmessages.apply(ø,arguments);\n\t\treturn createSequence(function $$failed(){ throw args; }).defer();\n\t};\n\n\tcreateSequence.extend = function $$public$extend(name,build) {\n\t\textensions[name] = build;\n\n\t\treturn createSequence;\n\t};\n\n\tcreateSequence.messages = ASQmessages = function $$public$messages() {\n\t\tvar ret = ARRAY_SLICE.call(arguments);\n\t\t// brand the message wrapper so we can detect\n\t\treturn brandIt(ret);\n\t};\n\n\tcreateSequence.isSequence = isSequence = function $$public$isSequence(val) {\n\t\treturn checkBranding(val) && !Array.isArray(val);\n\t};\n\n\tcreateSequence.isMessageWrapper = isMessageWrapper = function $$public$isMessageWrapper(val) {\n\t\treturn checkBranding(val) && Array.isArray(val);\n\t};\n\n\tcreateSequence.unpause = function $$public$unpause(sq) {\n\t\tif (sq.unpause) sq.unpause();\n\t\treturn sq;\n\t};\n\n\tcreateSequence.noConflict = function $$public$noConflict() {\n\t\tif (context) {\n\t\t\tcontext[name] = old_public_api;\n\t\t}\n\t\treturn createSequence;\n\t};\n\n\t// create a clone of the *asynquence* API\n\t// Note: does *not* include any registered extensions\n\tcreateSequence.clone = function $$public$clone() {\n\t\treturn DEF(name,context);\n\t};\n\n\t// private utility exports: only for internal/plugin use!\n\tcreateSequence.__schedule = schedule;\n\tcreateSequence.__tapSequence = tapSequence;\n\n\treturn createSequence;\n});\n","/home/travis/build/npmtest/node-npmtest-asynquence/node_modules/asynquence/asq.js":"/*! asynquence\n    v0.10.0 (c) Kyle Simpson\n    MIT License: http://getify.mit-license.org\n*/\n!function UMD(e,n,t){\"function\"==typeof define&&define.amd?define(t):\"undefined\"!=typeof module&&module.exports?module.exports=t():n[e]=t(e,n)}(\"ASQ\",this,function DEF(e,n){\"use strict\";function Queue(){function Item(e){this.fn=e,this.next=void 0}var e,n,r;return{add:function $$add(t){r=new Item(t),n?n.next=r:e=r,n=r,r=void 0},drain:function $$drain(){var r=e;for(e=n=t=null;r;)r.fn(),r=r.next}}}function schedule(e){r.add(e),t||(t=u(r.drain))}function tapSequence(e){function trigger(){e.seq=createSequence.apply(h,arguments).defer()}trigger.fail=function $$trigger$fail(){var n=f.call(arguments);e.seq=createSequence(function $$create$sequence(e){e.fail.apply(h,n)}).defer()},e.seq.val(function $$val(){return trigger.apply(h,arguments),c.apply(h,arguments)}).or(function $$or(){trigger.fail.apply(h,arguments)}),e.seq=createSequence(function $$create$sequence(e){trigger=e}).defer()}function createSequence(){function scheduleSequenceTick(){r?sequenceTick():e||(e=schedule(sequenceTick))}function throwSequenceErrors(){throw 1===$.length?$[0]:$}function sequenceTick(){var a,c;if(e=null,delete d.unpause,r)clearTimeout(e),e=null,s.length=p.length=g.length=$.length=0;else if(n)for(0!==p.length||t||(t=!0,throwSequenceErrors());p.length;){t=!0,a=p.shift();try{a.apply(h,$)}catch(i){l(i)?$=$.concat(i):($.push(i),i.stack&&$.push(i.stack)),0===p.length&&throwSequenceErrors()}}else if(u&&s.length>0){u=!1,a=s.shift(),c=g.slice(),g.length=0,c.unshift(createStepCompletion());try{a.apply(h,c)}catch(i){l(i)?$=$.concat(i):$.push(i),n=!0,scheduleSequenceTick()}}}function createStepCompletion(){function done(){n||r||u||e||(e=!0,u=!0,g.push.apply(g,arguments),$.length=0,scheduleSequenceTick())}done.fail=function $$step$fail(){n||r||u||e||(n=!0,g.length=0,$.push.apply($,arguments),scheduleSequenceTick())},done.abort=function $$step$abort(){n||r||(u=!1,r=!0,g.length=$.length=0,scheduleSequenceTick())},done.errfcb=function $$step$errfcb(e){e?done.fail(e):done.apply(h,f.call(arguments,1))};var e=!1;return done}function createGate(e,t,u){function resetGate(){clearTimeout(s),s=d=m=o=null}function scheduleGateTick(){return g?gateTick():void(s||(s=schedule(gateTick)))}function gateTick(){if(!(n||r||$)){var t=[];s=null,p?(e.fail.apply(h,o),resetGate()):g?(e.abort(),resetGate()):checkGate()&&($=!0,d.forEach(function $$each(e,n){t.push(m[\"s\"+n])}),e.apply(h,t),resetGate())}}function checkGate(){if(0!==d.length){var e=!0;return d.some(function $$some(n){return null===n?(e=!1,!0):void 0}),e}}function createSegmentCompletion(){function done(){if(!(n||r||p||g||$||d[e])){var t=c.apply(h,arguments);m[\"s\"+e]=t.length>1?t:t[0],d[e]=!0,scheduleGateTick()}}var e=d.length;return done.fail=function $$segment$fail(){n||r||p||g||$||d[e]||(p=!0,o=f.call(arguments),scheduleGateTick())},done.abort=function $$segment$abort(){n||r||p||g||$||(g=!0,gateTick())},done.errfcb=function $$segment$errfcb(e){e?done.fail(e):done.apply(h,f.call(arguments,1))},d[e]=null,done}var a,i,o,s,p=!1,g=!1,$=!1,d=[],m={};t.some(function $$some(e){if(p||g)return!0;a=u.slice(),a.unshift(createSegmentCompletion());try{e.apply(h,a)}catch(n){return i=n,p=!0,!0}}),i&&(l(i)?e.fail.apply(h,i):e.fail(i))}function then(){return n||r||0===arguments.length?d:(wrapArgs(arguments,thenWrapper).forEach(function $$each(e){i(e)?seq(e):s.push(e)}),scheduleSequenceTick(),d)}function or(){return r||0===arguments.length?d:(p.push.apply(p,arguments),scheduleSequenceTick(),d)}function gate(){if(n||r||0===arguments.length)return d;var e=f.call(arguments).map(function $$map(e){var n;return i(e)?(n={seq:e},tapSequence(n),function $$segment(e){n.seq.pipe(e)}):e});return then(function $$then(n){var t=f.call(arguments,1);createGate(n,e,t)}),d}function pipe(){return r||0===arguments.length?d:(f.call(arguments).forEach(function $$each(e){then(function $$then(n){e.apply(h,f.call(arguments,1)),n()}).or(e.fail)}),d)}function seq(){return n||r||0===arguments.length?d:(f.call(arguments).forEach(function $$each(e){var n={seq:e};i(e)&&tapSequence(n),then(function $$then(e){var t=n.seq;i(t)||(t=n.seq.apply(h,f.call(arguments,1))),t.pipe(e)})}),d)}function val(){return n||r||0===arguments.length?d:(f.call(wrapArgs(arguments,valWrapper)).forEach(function $$each(e){then(function $$then(n){var t=e.apply(h,f.call(arguments,1));l(t)||(t=c(t)),n.apply(h,t)})}),d)}function promise(){function wrap(e){return function $$fn(){e.apply(h,l(arguments[0])?arguments[0]:arguments)}}return n||r||0===arguments.length?d:(f.call(arguments).forEach(function $$each(e){then(function $$then(n){var t=e;\"function\"==typeof e&&\"function\"!=typeof e.then&&(t=e.apply(h,f.call(arguments,1))),t.then(wrap(n),wrap(n.fail))})}),d)}function fork(){var e;return val(function $$val(){return e?e.apply(h,arguments):e=createSequence.apply(h,arguments).defer(),c.apply(h,arguments)}),or(function $$or(){if(e)e.fail.apply(h,arguments);else{var n=f.call(arguments);e=createSequence().then(function $$then(e){e.fail.apply(h,n)}).defer()}}),createSequence().then(function $$then(n){e?e.pipe(n):e=n}).defer()}function abort(){return n?d:(r=!0,sequenceTick(),d)}function duplicate(){var e;return a={then_queue:s.slice(),or_queue:p.slice()},e=createSequence(),a=null,e}function unpause(){g.push.apply(g,arguments),e===!0&&(e=null),scheduleSequenceTick()}function defer(){return p.push(function ignored(){}),d}function internals(e,t){var a=arguments.length>1;switch(e){case\"seq_error\":if(!a)return n;n=t;break;case\"seq_aborted\":if(!a)return r;r=t;break;case\"then_ready\":if(!a)return u;u=t;break;case\"then_queue\":return s;case\"or_queue\":return p;case\"sequence_messages\":return g;case\"sequence_errors\":return $}}function includeExtensions(){Object.keys(o).forEach(function $$each(e){d[e]=d[e]||o[e](d,internals)})}var e,n=!1,t=!1,r=!1,u=!0,s=[],p=[],g=[],$=[],d=brandIt({then:then,or:or,onerror:or,gate:gate,all:gate,pipe:pipe,seq:seq,val:val,promise:promise,fork:fork,abort:abort,duplicate:duplicate,defer:defer});return includeExtensions(),a&&(s=a.then_queue.slice(),p=a.or_queue.slice(),d.unpause=unpause,e=!0),d.then.apply(h,arguments),d}function brandIt(e){return Object.defineProperty(e,p,{enumerable:!1,value:!0})}function checkBranding(e){return!(null==e||\"object\"!=typeof e||!e[p])}function valWrapper(e){return c.apply(h,f.call(arguments).slice(1,e+1))}function thenWrapper(e){arguments[e+1].apply(h,f.call(arguments).slice(1,e+1))}function wrapArgs(e,n){var t,r;for(e=f.call(e),t=0;t<e.length;t++)if(l(e[t]))e[t]=n.bind.apply(n,[null,e[t].length].concat(e[t]));else if(\"function\"!=typeof e[t]&&(n===valWrapper||!i(e[t]))){for(r=t+1;r<e.length&&(\"function\"!=typeof e[r]&&!checkBranding(e[r]));r++);e.splice(t,r-t,n.bind.apply(n,[null,r-t].concat(e.slice(t,r))))}return e}var t,r,u=\"undefined\"!=typeof setImmediate?function $$timer(e){return setImmediate(e)}:setTimeout;r=Queue();var a,c,i,l,o={},s=(n||{})[e],f=[].slice,p=\"__ASQ__\",h=Object.create(null);return createSequence.failed=function $$public$failed(){var e=c.apply(h,arguments);return createSequence(function $$failed(){throw e}).defer()},createSequence.extend=function $$public$extend(e,n){return o[e]=n,createSequence},createSequence.messages=c=function $$public$messages(){var e=f.call(arguments);return brandIt(e)},createSequence.isSequence=i=function $$public$isSequence(e){return checkBranding(e)&&!Array.isArray(e)},createSequence.isMessageWrapper=l=function $$public$isMessageWrapper(e){return checkBranding(e)&&Array.isArray(e)},createSequence.unpause=function $$public$unpause(e){return e.unpause&&e.unpause(),e},createSequence.noConflict=function $$public$noConflict(){return n&&(n[e]=s),createSequence},createSequence.clone=function $$public$clone(){return DEF(e,n)},createSequence.__schedule=schedule,createSequence.__tapSequence=tapSequence,createSequence});\n","/home/travis/build/npmtest/node-npmtest-asynquence/node_modules/asynquence/legacy.js":"if (!Object.create) {\n\tObject.create = function(o) {\n\t\tfunction F(){}\n\t\tF.prototype = o;\n\t\treturn new F();\n\t};\n}\n(function(){\n\ttry {\n\t\tObject.defineProperty({},\"x\",{});\n\t}\n\tcatch (err) {\n\t\tObject.defineProperty = function(obj,prop,desc) {\n\t\t\tobj[prop] = desc.value;\n\t\t\treturn obj;\n\t\t};\n\t}\n})();\nif (!Object.keys) {\n\tObject.keys = function(obj){\n\t\tvar result = [], prop;\n\t\tfor (prop in obj) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(obj,prop)) {\n\t\t\t\tresult.push(prop);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n}\n// Adapted From:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind\nif (!Function.prototype.bind) {\n\tFunction.prototype.bind = function(oThis) {\n\t\tvar aArgs = Array.prototype.slice.call(arguments,1),\n\t\t\tfToBind = this,\n\t\t\tfNOP = function(){},\n\t\t\tfBound = function(){\n\t\t\t\treturn fToBind.apply(\n\t\t\t\t\tthis instanceof fNOP && oThis ? this : oThis,\n\t\t\t\t\taArgs.concat(Array.prototype.slice.call(arguments))\n\t\t\t\t);\n\t\t\t}\n\t\t;\n\t\tfBound.prototype = Object.create(this.prototype);\n\t\treturn fBound;\n\t};\n}\n// Adapted From:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray\nif (!Array.isArray) {\n\tArray.isArray = function(arg) {\n\t\treturn Object.prototype.toString.call(arg) === \"[object Array]\";\n\t};\n}\n// Adapted From:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\nif (!Array.prototype.forEach) {\n\tArray.prototype.forEach = function(fn) {\n\t\tvar t = Object(this);\n\t\tvar len = t.length >>> 0;\n\t\tvar thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n\t\tfor (var i=0; i<len; i++) {\n\t\t\tif (i in t) {\n\t\t\t\tfn.call(thisArg,t[i],i,t);\n\t\t\t}\n\t\t}\n\t};\n}\n// Adapted From:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some\nif (!Array.prototype.some) {\n\tArray.prototype.some = function(fn) {\n\t\tvar t = Object(this);\n\t\tvar len = t.length >>> 0;\n\t\tvar thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n\t\tfor (var i=0; i<len; i++) {\n\t\t\tif (i in t && fn.call(thisArg,t[i],i,t)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n}\n// Adapted From:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\nif (!Array.prototype.indexOf) {\n\tArray.prototype.indexOf = function(searchElement,fromIndex) {\n\t\tvar length = this.length >>> 0; // Hack to convert object.length to a UInt32\n\t\tfromIndex = +fromIndex || 0;\n\t\tif (Math.abs(fromIndex) === Infinity) {\n\t\t\tfromIndex = 0;\n\t\t}\n\t\tif (fromIndex < 0) {\n\t\t\tfromIndex += length;\n\t\t\tif (fromIndex < 0) {\n\t\t\t\tfromIndex = 0;\n\t\t\t}\n\t\t}\n\t\tfor (;fromIndex<length; fromIndex++) {\n\t\t\tif (this[fromIndex] === searchElement) {\n\t\t\t\treturn fromIndex;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t};\n}\n// Adapted From:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\nif (!Array.prototype.map) {\n\tArray.prototype.map = function(fn) {\n\t\tvar t = Object(this);\n\t\tvar len = t.length >>> 0;\n\t\tvar res = new Array(len);\n\t\tvar thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tif (i in t) {\n\t\t\t\tres[i] = fn.call(thisArg,t[i],i,t);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t};\n}\n"}